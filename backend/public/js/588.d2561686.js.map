{"version":3,"file":"js/588.d2561686.js","mappings":"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","sources":["webpack://frontend/./src/views/IngredientsPage.vue","webpack://frontend/./src/views/IngredientsPage.vue?fb97"],"sourcesContent":["<template>\r\n  <div class=\"add-ingredients-container\">\r\n    <div class=\"add-ingredients\">\r\n      <h4>Ajouter des ingrédients :</h4>\r\n\r\n      <div class=\"input-container\">\r\n        <input type=\"text\" v-model=\"newIngredient\" placeholder=\"Entrez un ingrédient ou un code-barre\" :disabled=\"isLoading\" />\r\n        <input v-model=\"newQuantity\" type=\"number\" min=\"1\" placeholder=\"Quantité\" :disabled=\"isLoading\"/>\r\n        <select v-model=\"newUnit\" :disabled=\"isLoading\">\r\n          <option value=\"\">Unités (optionnel)</option>\r\n          <option value=\"g\">g</option>\r\n          <option value=\"ml\">ml</option>\r\n          <option value=\"kg\">kg</option>\r\n          <option value=\"l\">l</option>\r\n        </select>\r\n        <button @click=\"addIngredient\" :disabled=\"isLoading\">Ajouter</button>\r\n      </div>\r\n      <!--\r\n      <div class=\"search-container\">\r\n        <input v-model=\"searchIngredient\" placeholder=\"Rechercher un ingrédient\" />\r\n        <button @click=\"sortIngredientsByCategory\" class=\"sort-button\">Trier par catégorie</button>\r\n      </div>\r\n      -->\r\n      <div class=\"upload-container\">\r\n        <h5>Uploader une photo :</h5>\r\n        <input type=\"file\" @change=\"onFileChange\" accept=\"image/*\" />\r\n        <div v-if=\"imageUrl\" class=\"image-preview\">\r\n          <img :src=\"imageUrl\" alt=\"Aperçu de l'image\" />\r\n        </div>\r\n        <button @click=\"analyzeImage\" :disabled=\"!imageFile || isLoading\">Analyser</button>\r\n      </div>\r\n\r\n      <div v-if=\"analysisResult.length > 0\" class=\"analysis-results\">\r\n        <h5>Résultats de l'analyse :</h5>\r\n        <div class=\"analysis-grid\">\r\n          <div class=\"grid-header\">\r\n            <span>Sélection</span>\r\n            <span>Aliment</span>\r\n            <span>Probabilité</span>\r\n            <span>Quantité</span>\r\n            <span>Unités</span>\r\n          </div>\r\n          <div v-for=\"(item, index) in analysisResult\" :key=\"index\" class=\"grid-row\">\r\n            <input type=\"checkbox\" v-model=\"item.selected\" />\r\n            <span>{{ item.name }}</span>\r\n            <span>{{ (item.probability * 100).toFixed(2) }}%</span>\r\n            <input v-model=\"item.quantity\" type=\"number\" min=\"1\" placeholder=\"Quantité\" class=\"quantity-input\" :class=\"{ 'error': item.selected && (!item.quantity || parseFloat(item.quantity) <= 0) }\"/>\r\n            <div v-if=\"errorMessage\" class=\"error-message\">\r\n              {{ errorMessage }}\r\n            </div>\r\n            <select v-model=\"item.unit\" class=\"unit-select\">\r\n              <option value=\"\">Unités (optionnel)</option>\r\n              <option value=\"g\">g</option>\r\n              <option value=\"ml\">ml</option>\r\n              <option value=\"kg\">kg</option>\r\n              <option value=\"l\">l</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <button @click=\"validateSelection\" class=\"button\">Valider</button>\r\n      </div>\r\n\r\n      <div v-if=\"sortByCategory\" class=\"ingredient-list\">\r\n        <div v-for=\"(categoryGroup, category) in categorizedIngredients\" :key=\"category\" class=\"category-group\">\r\n          <h5 class=\"category-title\">{{ category }}</h5>\r\n          <ul>\r\n            <li v-for=\"(ingredient, index) in categoryGroup\" :key=\"index\" class=\"ingredient-item\">\r\n              <div class=\"ingredient-info\">\r\n                <strong>{{ ingredient.name }}</strong>\r\n                <div class=\"ingredient-quantity\">{{ ingredient.quantity }}</div>\r\n              </div>\r\n              <div class=\"ingredient-actions\">\r\n                <input v-model.number=\"ingredient.updateQuantity\" type=\"number\" min=\"1\" placeholder=\"Quantité\" />\r\n                <button @click=\"updateIngredientQuantity(index, ingredient.name, ingredient.updateQuantity, 'add')\" class=\"button\">Ajouter</button>\r\n                <button @click=\"updateIngredientQuantity(index, ingredient.name, ingredient.updateQuantity, 'subtract')\" class=\"button\">Soustraire</button>\r\n                <button @click=\"removeIngredient(index, ingredient.name)\" class=\"button\">Supprimer</button>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div v-else class=\"ingredient-list\">\r\n        <ul>\r\n          <li v-for=\"(ingredient, index) in filteredIngredients\" :key=\"index\" class=\"ingredient-item\">\r\n            <div class=\"ingredient-info\">\r\n              <strong>{{ ingredient.name }}</strong>\r\n              <div class=\"ingredient-quantity\">{{ ingredient.quantity }}</div>\r\n            </div>\r\n            <div class=\"ingredient-actions\">\r\n              <input v-model.number=\"ingredient.updateQuantity\" type=\"number\" min=\"1\" placeholder=\"Quantité\" />\r\n              <button @click=\"updateIngredientQuantity(index, ingredient.name, ingredient.updateQuantity, 'add')\" class=\"button\">Ajouter</button>\r\n              <button @click=\"updateIngredientQuantity(index, ingredient.name, ingredient.updateQuantity, 'subtract')\" class=\"button\">Soustraire</button>\r\n              <button @click=\"removeIngredient(index, ingredient.name)\" class=\"button\">Supprimer</button>\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      <div v-if=\"isLoading\" class=\"loading-spinner\">Chargement...</div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: \"IngredientsPage.vue\",\r\n  data() {\r\n    return {\r\n      newIngredient: \"\",\r\n      newQuantity: \"\",\r\n      newUnit: \"\",\r\n      searchIngredient: \"\",\r\n      ingredients: [],\r\n      imageFile: null,\r\n      imageUrl: \"\",\r\n      analysisResult: [],\r\n      isLoading: false,\r\n      sortByCategory: false,\r\n      errorMessage: \"\"\r\n    };\r\n  },\r\n  computed: {\r\n    filteredIngredients() {\r\n      let filtered = this.ingredients;\r\n\r\n      if (this.searchIngredient.trim() !== \"\") {\r\n        filtered = filtered.filter(ingredient =>\r\n          ingredient.name.toLowerCase().includes(this.searchIngredient.trim().toLowerCase())\r\n        );\r\n      }\r\n\r\n      return filtered;\r\n    },\r\n    categorizedIngredients() {\r\n      const categorized = {};\r\n      this.filteredIngredients.forEach(ingredient => {\r\n        if (!categorized[ingredient.category]) {\r\n          categorized[ingredient.category] = [];\r\n        }\r\n        categorized[ingredient.category].push(ingredient);\r\n      });\r\n      return categorized;\r\n    }\r\n  },\r\n  created() {\r\n    this.fetchIngredientsFromFridge();\r\n  },\r\n  methods: {\r\n    onFileChange(event) {\r\n      const file = event.target.files[0];\r\n      if (file) {\r\n        this.imageFile = file;\r\n        this.imageUrl = URL.createObjectURL(file);\r\n      }\r\n    },\r\n    async analyzeImage() {\r\n      if (!this.imageFile) return;\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"image\", this.imageFile);\r\n\r\n      try {\r\n        this.isLoading = true;\r\n        const response = await axios.post(`${process.env.VUE_APP_URL_BACKEND}/users/analyzeImage`, formData, {\r\n          headers: {\r\n            \"Content-Type\": \"multipart/form-data\"\r\n          }\r\n        });\r\n\r\n        if (response.data && response.data.data) {\r\n          this.analysisResult = response.data.data.map(item => ({\r\n            ...item,\r\n            selected: false,\r\n            quantity: '',\r\n            unit: ''\r\n          }));\r\n        } else {\r\n          this.analysisResult = [];\r\n          alert(\"Aucun ingrédient trouvé dans l'image.\");\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de l'analyse de l'image :\", error);\r\n        alert(\"Une erreur est survenue lors de l'analyse de l'image.\");\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    async validateSelection() {\r\n      const selectedItems = this.analysisResult.filter(item => item.selected && item.quantity);\r\n\r\n      const invalidItems = selectedItems.filter(item => !item.quantity || parseFloat(item.quantity) <= 0);\r\n      if (invalidItems.length > 0) {\r\n        this.errorMessage = \"Veuillez indiquer une quantité valide pour tous les ingrédients sélectionnés.\";\r\n        return;\r\n      }\r\n\r\n      this.errorMessage = \"\";\r\n  \r\n      for (const item of selectedItems) {\r\n        const existingIngredientIndex = this.ingredients.findIndex(\r\n          ingredient => \r\n            ingredient.name.toLowerCase() === item.name.toLowerCase() && ingredient.quantity.includes(item.unit)\r\n        );\r\n\r\n        if (existingIngredientIndex !== -1) {\r\n          const existingIngredient = this.ingredients[existingIngredientIndex];\r\n          const currentQuantityString = existingIngredient.quantity;\r\n          const quantityMatch = currentQuantityString.match(/^([\\d.]+)\\s*(.*)$/);\r\n\r\n          if (quantityMatch) {\r\n            const currentQuantity = parseFloat(quantityMatch[1]);\r\n            const currentUnit = quantityMatch[2];\r\n            const updatedQuantity = currentQuantity + parseFloat(item.quantity);\r\n\r\n            this.ingredients[existingIngredientIndex].quantity = `${updatedQuantity} ${currentUnit}`.trim();\r\n\r\n            try {\r\n              await axios.put(`${process.env.VUE_APP_URL_BACKEND}/users/fridge/update`, {\r\n                foodName: item.name,\r\n                quantity: updatedQuantity,\r\n                unit: currentUnit\r\n              }, {\r\n                withCredentials: true\r\n              });\r\n            } catch (error) {\r\n              console.error(`Erreur lors de la mise à jour de ${item.name} dans la base de données :`, error);\r\n            }\r\n          }\r\n        } else {\r\n          this.ingredients.push({\r\n            name: item.name,\r\n            quantity: `${item.quantity} ${item.unit}`.trim(),\r\n            category: 'ajoutés',\r\n            updateQuantity: 0,\r\n          });\r\n          try {\r\n            await axios.post(`${process.env.VUE_APP_URL_BACKEND}/users/fridge/add`, {\r\n              foodName: item.name,\r\n              quantity: `${item.quantity} ${item.unit}`.trim(),\r\n            }, {\r\n              withCredentials: true\r\n            });\r\n          } catch (error) {\r\n            console.error(`Erreur lors de l'ajout de ${item.name} dans la base de données :`, error);\r\n          }\r\n        }\r\n      }\r\n\r\n      this.analysisResult = [];\r\n      this.$emit(\"ingredients-updated\", this.ingredients);\r\n    },\r\n    async fetchIngredientsFromFridge() {\r\n      try {\r\n        this.isLoading = true;\r\n        const response = await axios.get(`${process.env.VUE_APP_URL_BACKEND}/users/fridge`, {\r\n          withCredentials: true\r\n        });\r\n        this.ingredients = response.data.map(item => ({\r\n          name: item.food_name,\r\n          quantity: item.quantity,\r\n          category: item.category || \"autres\",\r\n          updateQuantity: 0\r\n        }));\r\n      } catch (error) {\r\n        console.error('Erreur lors de la récupération des ingrédients :', error);\r\n      } finally {\r\n        this.isLoading = false;\r\n      }\r\n    },\r\n    async addIngredient() {\r\n      const input = this.newIngredient.trim();\r\n      let ingredientName = input;\r\n\r\n      if (ingredientName) {\r\n        const existingIngredientIndex = this.ingredients.findIndex(\r\n          (item) => item.name === ingredientName && item.quantity.includes(this.newUnit)\r\n        );\r\n\r\n        if (existingIngredientIndex !== -1) {\r\n          const existingIngredient = this.ingredients[existingIngredientIndex];\r\n          const currentQuantityString = existingIngredient.quantity;\r\n          const quantityMatch = currentQuantityString.match(/^([\\d.]+)\\s*(.*)$/);\r\n\r\n          if (!quantityMatch) {\r\n            alert(\"Impossible de traiter la quantité actuelle.\");\r\n            return;\r\n          }\r\n\r\n          const currentQuantity = parseFloat(quantityMatch[1]);\r\n          const currentUnit = quantityMatch[2];\r\n          const additionalQuantity = parseFloat(this.newQuantity) || 1;\r\n          const updatedQuantity = currentQuantity + additionalQuantity;\r\n\r\n          try {\r\n            const response = await axios.put(`${process.env.VUE_APP_URL_BACKEND}/users/fridge/update`, {\r\n              foodName: ingredientName,\r\n              quantity: updatedQuantity,\r\n              unit: currentUnit\r\n            }, {\r\n              withCredentials: true\r\n            });\r\n\r\n            if (response.status !== 200) {\r\n              throw new Error(\"Erreur lors de la mise à jour de l'aliment dans le réfrigérateur de l'utilisateur.\");\r\n            }\r\n\r\n            this.ingredients[existingIngredientIndex].quantity = `${updatedQuantity} ${currentUnit}`.trim();\r\n          } catch (error) {\r\n            console.error(\"Erreur lors de la mise à jour de l'aliment :\", error);\r\n            return;\r\n          }\r\n        } else {\r\n          try {\r\n            const response = await axios.post(`${process.env.VUE_APP_URL_BACKEND}/users/fridge/add`, {\r\n              foodName: ingredientName,\r\n              quantity: `${this.newQuantity || 1} ${this.newUnit}`.trim(),\r\n            }, {\r\n              withCredentials: true\r\n            });\r\n\r\n            if (response.status !== 200) {\r\n              throw new Error(\"Erreur lors de l'ajout de l'aliment dans le réfrigérateur de l'utilisateur.\");\r\n            }\r\n\r\n            await this.fetchIngredientsFromFridge();\r\n          } catch (error) {\r\n            if (error.response && error.response.status === 404) {\r\n              alert(\"L'aliment n'est pas encore dans la base de données.\");\r\n            } else {\r\n              console.error(\"Erreur lors de l'ajout de l'aliment :\", error);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      this.newIngredient = \"\";\r\n      this.newQuantity = \"\";\r\n      this.newUnit = \"\";\r\n      this.$emit(\"ingredients-updated\", this.ingredients);\r\n    },\r\n    async updateIngredientQuantity(index, ingredientName, quantity, action) {\r\n      if (!quantity || quantity <= 0) {\r\n        alert(\"Veuillez entrer une quantité valide.\");\r\n        return;\r\n      }\r\n\r\n      const currentQuantityString = this.ingredients[index].quantity;\r\n      const quantityMatch = currentQuantityString.match(/^([\\d.]+)\\s*(.*)$/);\r\n\r\n      if (!quantityMatch) {\r\n        alert(\"Impossible de traiter la quantité actuelle.\");\r\n        return;\r\n      }\r\n\r\n      const currentQuantity = parseFloat(quantityMatch[1]);\r\n      const currentUnit = quantityMatch[2];\r\n      let updatedQuantity;\r\n\r\n      if (action === 'add') {\r\n        updatedQuantity = currentQuantity + quantity;\r\n      } else if (action === 'subtract') {\r\n        updatedQuantity = currentQuantity - quantity;\r\n        if (updatedQuantity <= 0) {\r\n          alert(\"La quantité ne peut pas être inférieure ou égale à zéro.\");\r\n          return;\r\n        }\r\n      }\r\n\r\n      try {\r\n        const response = await axios.put(`${process.env.VUE_APP_URL_BACKEND}/users/fridge/update`, {\r\n          foodName: ingredientName,\r\n          quantity: updatedQuantity,\r\n          unit: currentUnit\r\n        }, {\r\n          withCredentials: true\r\n        });\r\n\r\n        if (response.status !== 200) {\r\n          throw new Error(\"Erreur lors de la mise à jour de l'aliment dans le réfrigérateur de l'utilisateur.\");\r\n        }\r\n\r\n        this.ingredients[index].quantity = `${updatedQuantity} ${currentUnit}`.trim();\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la mise à jour de l'aliment :\", error);\r\n      }\r\n    },\r\n    async removeIngredient(index, ingredientName) {\r\n      try {\r\n        const response = await axios.delete(`${process.env.VUE_APP_URL_BACKEND}/users/fridge/delete`, {\r\n          params: { foodName: ingredientName },\r\n          withCredentials: true\r\n        });\r\n\r\n        if (response.status !== 200) {\r\n          throw new Error(\"Erreur lors de la suppression de l'aliment du réfrigérateur de l'utilisateur.\");\r\n        }\r\n\r\n        this.ingredients.splice(index, 1);\r\n        this.$emit(\"ingredients-updated\", this.ingredients);\r\n      } catch (error) {\r\n        console.error(\"Erreur lors de la suppression de l'aliment :\", error);\r\n      }\r\n    },\r\n    sortIngredientsByCategory() {\r\n      this.sortByCategory = !this.sortByCategory;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.add-ingredients {\r\n  text-align: left;\r\n  margin: 20px 0;\r\n}\r\n.input-container, .upload-container {\r\n  margin-top: 20px;\r\n}\r\n.search-container {\r\n  margin-top: 10px;\r\n  display: flex;\r\n  gap: 10px;\r\n}\r\n.image-preview {\r\n  margin-top: 10px;\r\n  max-width: 300px;\r\n}\r\n.image-preview img {\r\n  width: 100%;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n.analysis-results {\r\n  margin-top: 20px;\r\n}\r\n.analysis-grid {\r\n  display: grid;\r\n  grid-template-columns: 0.5fr 2fr 1fr 1fr 1fr;\r\n  gap: 10px;\r\n  align-items: center;\r\n}\r\n.grid-header {\r\n  font-weight: bold;\r\n  text-align: center;\r\n  background-color: #f8f8f8;\r\n  padding: 10px;\r\n  border-bottom: 2px solid #ddd;\r\n  display: contents;\r\n}\r\n.grid-row {\r\n  display: contents;\r\n}\r\n.grid-row span {\r\n  text-align: center;\r\n}\r\n.analysis-results .quantity-input {\r\n  margin-left: 5px;\r\n  width: 100%;\r\n  padding: 5px;\r\n}\r\n.analysis-results .unit-select {\r\n  margin-left: 5px;\r\n  padding: 5px;\r\n}\r\n.analysis-results .validate-button {\r\n  margin-top: 20px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  padding: 10px 15px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n}\r\n.category-group {\r\n  margin-top: 20px;\r\n}\r\n.category-title {\r\n  background-color: gray;\r\n  color: white;\r\n  padding: 5px 10px;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n}\r\n.ingredient-item {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  margin-top: 10px;\r\n  padding: 10px;\r\n  border: 1px solid #ddd;\r\n  border-radius: 5px;\r\n}\r\n.ingredient-info {\r\n  flex-grow: 1;\r\n}\r\n.ingredient-quantity {\r\n  font-size: 0.9em;\r\n  color: white;\r\n}\r\n.ingredient-actions {\r\n  display: flex;\r\n  gap: 5px;\r\n}\r\n.add-button {\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n}\r\n.subtract-button {\r\n  background-color: #ffc107;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n}\r\n.remove-button {\r\n  background-color: #dc3545;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n}\r\n.sort-button {\r\n  background-color: #BA9371;\r\n  color: white;\r\n  border: none;\r\n  padding: 5px 10px;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n}\r\nbutton.validate-button{\r\n  background-color: #BA9371;\r\n  color: white;\r\n  border: none;\r\n  transition: all 0.3s ease;\r\n  border-radius: 4px;\r\n}\r\n.loading-spinner {\r\n  margin-top: 10px;\r\n  font-size: 16px;\r\n  color: white;\r\n  font-weight: bold;\r\n  text-align: center;\r\n}\r\nbutton {\r\n    background-color: #BA9371;\r\n    color: white;\r\n    border: none;\r\n    transition: all 0.3s ease;\r\n    border-radius: 4px;\r\n    padding: 10px;\r\n    width: auto;\r\n}\r\nbutton:hover {\r\n    background-color: #C56929;\r\n    transform: scale(1.05);\r\n    color: white;\r\n}\r\n.add-ingredients-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n.quantity-input.error {\r\n  border: 2px solid red;\r\n  background-color: #ffe6e6;\r\n}\r\n.error-message {\r\n  color: red;\r\n  font-weight: bold;\r\n  margin-top: 10px;\r\n}\r\ninput[type=\"checkbox\"] {\r\n  appearance: none;\r\n  width: 20px;\r\n  height: 20px;\r\n  border: 2px solid white;\r\n  border-radius: 4px;\r\n  background-color: #fff;\r\n  cursor: pointer;\r\n  position: relative;\r\n}\r\ninput[type=\"checkbox\"]:checked {\r\n  background-color: #28a745;\r\n  border-color: #28a745;\r\n}\r\ninput[type=\"checkbox\"]:checked::after {\r\n  content: \"✓\";\r\n  color: #ffffff;\r\n  font-size: 16px;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n}\r\n</style>\r\n","import { render } from \"./IngredientsPage.vue?vue&type=template&id=973e1b5a&scoped=true\"\nimport script from \"./IngredientsPage.vue?vue&type=script&lang=js\"\nexport * from \"./IngredientsPage.vue?vue&type=script&lang=js\"\n\nimport \"./IngredientsPage.vue?vue&type=style&index=0&id=973e1b5a&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-973e1b5a\"]])\n\nexport default __exports__"],"names":["class","key","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","_hoisted_3","type","_cache","$event","$data","newIngredient","placeholder","disabled","isLoading","_hoisted_4","newQuantity","min","_hoisted_5","newUnit","_createStaticVNode","_hoisted_6","onClick","args","$options","addIngredient","_hoisted_7","_hoisted_8","onChange","onFileChange","accept","imageUrl","_hoisted_9","src","alt","_hoisted_10","_createCommentVNode","analyzeImage","imageFile","_hoisted_11","analysisResult","length","_hoisted_12","_hoisted_13","_Fragment","_renderList","item","index","selected","_hoisted_14","_toDisplayString","name","probability","toFixed","quantity","_normalizeClass","parseFloat","_hoisted_15","errorMessage","_hoisted_16","unit","_hoisted_17","validateSelection","sortByCategory","_hoisted_18","categorizedIngredients","categoryGroup","category","_hoisted_19","ingredient","_hoisted_20","_hoisted_21","_hoisted_22","updateQuantity","_hoisted_23","number","updateIngredientQuantity","_hoisted_24","_hoisted_25","removeIngredient","_hoisted_26","_hoisted_27","filteredIngredients","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","data","searchIngredient","ingredients","computed","filtered","this","trim","filter","toLowerCase","includes","categorized","forEach","push","created","fetchIngredientsFromFridge","methods","event","file","target","files","URL","createObjectURL","formData","FormData","append","response","axios","post","headers","map","alert","error","console","selectedItems","invalidItems","existingIngredientIndex","findIndex","existingIngredient","currentQuantityString","quantityMatch","match","currentQuantity","currentUnit","updatedQuantity","put","foodName","withCredentials","$emit","get","food_name","input","ingredientName","additionalQuantity","status","Error","action","delete","params","splice","sortIngredientsByCategory","__exports__","render"],"sourceRoot":""}